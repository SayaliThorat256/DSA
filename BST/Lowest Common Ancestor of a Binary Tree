 /*
 1. if root is null return null
 2. if found any node a or b return it
 3. if left is null means right is ancestor and vice versa
 4. if both are not null then root is ancestor
 5. always think of example u got it
 
 */
class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(root == null) {
            return null;
        }
        if(root == p || root == q) {
            return root;
        }
        TreeNode left = lowestCommonAncestor(root.left, p ,q);
        TreeNode right = lowestCommonAncestor(root.right, p ,q);
        
        if(left == null) return right;
        if(right == null) return left;
        
        return root;
        
        
    }
}
