class Solution {
    Map<Integer, Integer> map = new HashMap<>();
    int index = 0;
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        int n = inorder.length;
        for(int i = 0; i < n; i++) {
            map.put(inorder[i], i);
        }
        
        return dfs(0, n - 1, preorder);
    }
    private TreeNode dfs(int start, int end, int[] preorder) {
        if(start > end) {
            return null;
        }
        
        int value = preorder[index++];
        TreeNode cur = new TreeNode(value);
        cur.left = dfs(start, map.get(value) - 1, preorder);
        cur.right = dfs(map.get(value) + 1, end, preorder);
        return cur;
    }
    
}
