class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
       //  queue.add(null);
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> subset = new ArrayList<>();
        if(root == null) {
            return result;
        }
        while(!queue.isEmpty()) {
            int length = queue.size();
            subset = new ArrayList<>();
            while(length > 0) {
                TreeNode current = queue.remove();
                subset.add(current.val);
                if(current.left != null) {
                    queue.add(current.left);
                }
                if(current.right != null) {
                    queue.add(current.right);
                }
                length--;
            }
            result.add(new ArrayList<>(subset));
            
        }
        return result;
     }
}
