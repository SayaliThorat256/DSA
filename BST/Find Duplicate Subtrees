class Solution {
    public List<TreeNode> findDuplicateSubtrees(TreeNode root) {
        List<TreeNode> powerSet = new ArrayList<>();
        Map<String, Integer> map = new HashMap<>();
        duplicates(map, "", powerSet, root);
        
        return powerSet;
    }
    
    public String duplicates(Map<String, Integer> map, String str, List<TreeNode> powerSet , TreeNode root) {
        if(root == null) {
            str = str + '$';
            return str;
        }
        
        String s = "";
        s = s + "_" + duplicates(map, str, powerSet ,root.left);
       
        s = s + "_" + duplicates(map, str, powerSet ,root.right);
        s = root.val+ "_"+ s;
        
        if(map.get(s) == null) {
                map.put(s, 1);
        } else {
             if(map.get(s) < 2) {
                  powerSet.add(root);
             }
             map.put(s, map.get(s) +  1);
      }
        return s;
    }
    
    
}
