class Solution {
    
    private boolean search(int k, String word, char[][] board, int i, int j, int m, int n) {
        if(k == word.length()) {
            return true;
        }
        if(i < 0 || j < 0 ||  i == m || j == n || board[i][j] != word.charAt(k)) return false;
        board[i][j] = '#';
        //System.out.println(i + " " + j);
        boolean a1 = search(k + 1, word, board, i + 1, j, m, n);
        boolean a2 = search(k + 1, word, board, i - 1, j, m, n);
        boolean a3 = search(k + 1, word, board, i, j + 1, m, n);
        boolean a4 = search(k + 1, word, board, i, j - 1, m, n);
        board[i][j] = word.charAt(k);
        return a1 || a2 || a3 || a4;
    }
    
    
    public boolean exist(char[][] board, String word) {
        
        for(int i = 0 ; i < board.length; i++) {
            for(int j = 0; j < board[i].length; j++) {
                if(board[i][j] == word.charAt(0)) {
                    //System.out.println(search(0, word, board, i, j, board.length, board[i].length));
                    if (search(0, word, board, i, j, board.length, board[i].length)) {
                        return true ;
                    } 
                }
            }
        }
        return false;
    }
}
