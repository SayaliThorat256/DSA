import java.util.*;
public class Solution {
    
    public static void findPath(ArrayList<String> result, int i , int j, int[][] arr, int n, String s) {
      //  System.out.println(i + " " + j);
        if(i < 0 || j < 0 || j == n || i == n || arr[i][j] == 0) {
            return;
        } else if(i == n -1 && j == n-1) {
           //    System.out.println(i + " " + j);
              result.add(s);
              return;
        } else {
                arr[i][j] = 0;
            //System.out.println(i + " " + j);
                //down
                findPath(result, i + 1, j, arr, n, s + "D");
                //left
                findPath(result, i, j - 1, arr, n, s + "L");
                //right
                findPath(result, i, j + 1, arr, n, s + "R");
                //up
                findPath(result, i - 1, j, arr, n, s + "U");
                
              arr[i][j] = 1;
            }
        
        
    }
    
    
    
    public static ArrayList < String > findSum(int[][] arr, int n) {
        // Write your code here.
        ArrayList < String > result = new ArrayList<>();
        findPath(result, 0 , 0, arr, n ,"");
        return result;
    }
}
