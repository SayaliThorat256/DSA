class Solution {
    public boolean isValid(String s) {
        
        Stack<Character> stack = new Stack<>();
        for(char c : s.toCharArray()){
            if(c == '('){
                stack.push(')');
            }
            else if(c == '['){
                stack.push(']');
            }
            else if(c == '{'){
                stack.push('}');
            }
            else if(stack.isEmpty() || stack.pop()!= c){
                return false;
            }
        }
        /*for(char c : s.toCharArray()) {
            if((!stack.isEmpty()) && (stack.peek() == c - 1  || stack.peek() == c - 2)) {
                stack.pop();
            } else {
                stack.push(c);
            }
        }*/
        return stack.isEmpty();
        
        /*for(int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
           if(s.charAt(i) == ')') {
               if(stack.isEmpty()) {
                   return false;
               }
               if(stack.peek() == '('){
                   stack.pop();     
               } else {
                   stack.push(c);
               }
           } else if(s.charAt(i) == ']') {
               if(stack.isEmpty()) {
                   return false;
               }
               if(stack.peek() == '['){
                   stack.pop();
               } else {
                   stack.push(c);
               }
           } else if(s.charAt(i) == '}') {
               if(stack.isEmpty()) {
                   return false;
               }
               if(stack.peek() == '{'){
                   stack.pop();
               } else {
                   stack.push(c);
               }
           } else {
                stack.push(c);
           }
        }
        if(stack.isEmpty()) {
            return true;
        } else {
            return false;
        }*/
    }
    
    
   
}
