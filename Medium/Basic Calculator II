class Solution {
    public int calculate(String s) {
        
        int currentNo = 0;
        Stack<Integer> stack = new Stack<>();
        char sign = '+';
        for(int i = 0; i < s.length(); i++) {
            if(Character.isDigit(s.charAt(i))) {
                currentNo = 0;
                currentNo = s.charAt(i) - '0';
                i++;
                while(i < s.length() && Character.isDigit(s.charAt(i))) {
                    currentNo = currentNo * 10 + (s.charAt(i) - '0');
                    i++;
                }
                
                
                i--;
                if(sign == '+') {
                    stack.push((currentNo));
                } else if(sign == '-') {
                    stack.push((-currentNo));
                } else if(sign == '*') {
                    stack.push(stack.pop() * currentNo);
                } else if(sign == '/') {
                    stack.push(stack.pop() / currentNo);
                }
            } else if(s.charAt(i) == '+') {
                sign = '+';
            } else if(s.charAt(i) == '-') {
                sign = '-';
            } else if(s.charAt(i) == '*') {
                sign = '*';
            } else if(s.charAt(i) == '/') {
                sign = '/';
            } else {
                continue;
            }
        }
        int result = 0;
        while(!stack.isEmpty()) {
            result += stack.pop();
        }
        return result;
    }
}
