class MyHashMap {
    Node head;
    public MyHashMap() {
        this.head = null;
    }
    
    public void put(int key, int value) {
        Node newNode = new Node(key, value);
        if(head == null) {
            head = newNode;
        } else {
       
            Node current = head;
            Node parent = head;
           
            while(current != null && current.key != key) {
               
                parent = current;
                current = current.next;
            }
            if(current != null) {
                current.val = value;
            } else {
                 current = newNode;
                 parent.next = current;
            }
           
        }
    }
    
    public int get(int key) {
         Node current = head;
       
            while(current != null && current.key != key) {
             
                current = current.next;
            }
    
            if(current != null) {
                return current.val;
            } else {
                 return -1;
            }
    }
    
    public void remove(int key) {
        Node current = head;
        Node parent = head;
        if(head == null) {
            return;
        }
        if(head.key == key) {
            head = head.next;
            return;
        }
        while(current != null && current.key != key) {
            parent = current;
            current = current.next;
        }
        if(current != null) {
            if(current.next == null) {
            parent.next = null;
            return;
            }
            parent.next = current.next; 
        }
        
        
        
    }
    
    private class Node {
        int key;
        int val;
        Node next = null;
        public Node(int key, int val) {
            this.key = key;
            this.val = val;
        }
    }
}
