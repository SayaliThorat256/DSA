class Solution {
    public ListNode reverseList(ListNode head) {
        ListNode prev = null;
        ListNode current = head;
        while(current != null) {
            ListNode temp = current.next;
            current.next = prev;
            prev = current;
            current = temp;
        }
        return prev;
    }
}

class Solution {
    public ListNode reverseList(ListNode head) {
        if(head == null) {
            return null;
        }
        return getRev(head);
    }
    
    public ListNode getRev(ListNode head) {
        if(head.next == null) {
            //last node is the reverse head
            return head;
        }
        
        ListNode revHead = getRev(head.next);
        head.next.next = head;//consider first node 
        head.next = null;//consider first node 
        return revHead;
        
    }
    
    
}
