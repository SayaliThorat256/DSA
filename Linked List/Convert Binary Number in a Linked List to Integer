class Solution {
    public int getDecimalValue(ListNode head) {
        //3 ways
        //eff 
        //1. consider first node to 2 ^ 0
        //2. next if not zero so we will have multiply previous one with 0 and then add them
        //3. now a and b are previous of c(a, b,c)
        //4. (a *2 +  b* 2) = (a + b) * 2
        //5. we will keep on adding ans if nex is there multiplw it with 2 and current value in it as (2 ^ 0 is 1)
        int ans = 0;
        while(head != null) {
            ans = ans * 2 + (head.val);
            head = head.next;
        }
        return ans;
        
        //2 find length and then do it so (2 ^ n - 1, 2 ^ n - 2).. so on
        //3 reverse link list then do
    }
}
